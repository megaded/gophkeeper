name: Go CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        go-version: [1.22.x]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}

      - name: Install dependencies
        run: |
          go mod download
          go mod tidy

      - name: Build for Linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          GOOS=linux GOARCH=amd64 go build -o myapp-linux-amd64 .
          GOOS=linux GOARCH=386 go build -o myapp-linux-386 .

      - name: Build for macOS
        if: matrix.os == 'macos-latest'
        run: |
          GOOS=darwin GOARCH=amd64 go build -o myapp-darwin-amd64 .
          GOOS=darwin GOARCH=arm64 go build -o myapp-darwin-arm64 .

      - name: Build for Windows
        if: matrix.os == 'windows-latest'
        run: |
          GOOS=windows GOARCH=amd64 go build -o myapp-windows-amd64.exe .
          GOOS=windows GOARCH=386 go build -o myapp-windows-386.exe .

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: myapp-${{ matrix.os }}
          path: |
            myapp-*
            !myapp-*.exe